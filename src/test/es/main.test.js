import {fizzBuzzer} from "../../main/es/main";

describe('Fizz Buzz "Game"', () => {
    describe('Simple Fizz Buzz', () => {
        test.each([
            [1,`1`],
            [2,`2`],
            [3,`FIZZ`],
            [4,`4`],
            [5,`BUZZ`],
            [6,`FIZZ`],
            [7,`7`],
            [8,`8`],
            [9,`FIZZ`],
            [10,`BUZZ`],
            [11,`11`],
            [12,`FIZZ`],
            [13,`13`],
            [14,`14`],
            [15,`FIZZBUZZ`],
            [16,`16`],
            [17,`17`],
            [18,`FIZZ`],
            [19,`19`],
            [20,`BUZZ`],
            [21,`FIZZ`],
            [22,`22`],
            [23,`23`],
            [24,`FIZZ`],
            [25,`BUZZ`],
            [26,`26`],
            [27,`FIZZ`],
            [28,`28`],
            [29,`29`],
            [30,`FIZZBUZZ`],
            [31,`31`],
            [32,`32`],
            [33,`FIZZ`],
            [34,`34`],
            [35,`BUZZ`],
            [36,`FIZZ`],
            [37,`37`],
            [38,`38`],
            [39,`FIZZ`],
            [40,`BUZZ`],
            [41,`41`],
            [42,`FIZZ`],
            [43,`43`],
            [44,`44`],
            [45,`FIZZBUZZ`],
            [46,`46`],
            [47,`47`],
            [48,`FIZZ`],
            [49,`49`],
            [50,`BUZZ`],
            [51,`FIZZ`],
            [52,`52`],
            [53,`53`],
            [54,`FIZZ`],
            [55,`BUZZ`],
            [56,`56`],
            [57,`FIZZ`],
            [58,`58`],
            [59,`59`],
            [60,`FIZZBUZZ`],
            [61,`61`],
            [62,`62`],
            [63,`FIZZ`],
            [64,`64`],
            [65,`BUZZ`],
            [66,`FIZZ`],
            [67,`67`],
            [68,`68`],
            [69,`FIZZ`],
            [70,`BUZZ`],
            [71,`71`],
            [72,`FIZZ`],
            [73,`73`],
            [74,`74`],
            [75,`FIZZBUZZ`],
            [76,`76`],
            [77,`77`],
            [78,`FIZZ`],
            [79,`79`],
            [80,`BUZZ`],
            [81,`FIZZ`],
            [82,`82`],
            [83,`83`],
            [84,`FIZZ`],
            [85,`BUZZ`],
            [86,`86`],
            [87,`FIZZ`],
            [88,`88`],
            [89,`89`],
            [90,`FIZZBUZZ`],
            [91,`91`],
            [92,`92`],
            [93,`FIZZ`],
            [94,`94`],
            [95,`BUZZ`],
            [96,`FIZZ`],
            [97,`97`],
            [98,`98`],
            [99,`FIZZ`],
            [100,`BUZZ`]
        ])(
            "fizzBuzz(%p) => %p",
            (index, expected) => {
                /*actual value is put in a string to accept both 1[Number] and "1"[String]*/
                expect(`${fizzBuzzer.fizzBuzz(index)}`).toEqual(expected);
            });
    });
    describe('Fizz Buzz Tazz', () => {
        test.each([
            [1,`1`],
            [2,`2`],
            [3,`FIZZ`],
            [4,`4`],
            [5,`BUZZ`],
            [6,`FIZZ`],
            [7,`TAZZ`],
            [8,`8`],
            [9,`FIZZ`],
            [10,`BUZZ`],
            [11,`11`],
            [12,`FIZZ`],
            [13,`13`],
            [14,`TAZZ`],
            [15,`FIZZBUZZ`],
            [16,`16`],
            [17,`17`],
            [18,`FIZZ`],
            [19,`19`],
            [20,`BUZZ`],
            [21,`FIZZTAZZ`],
            [22,`22`],
            [23,`23`],
            [24,`FIZZ`],
            [25,`BUZZ`],
            [26,`26`],
            [27,`FIZZ`],
            [28,`TAZZ`],
            [29,`29`],
            [30,`FIZZBUZZ`],
            [31,`31`],
            [32,`32`],
            [33,`FIZZ`],
            [34,`34`],
            [35,`BUZZTAZZ`],
            [36,`FIZZ`],
            [37,`37`],
            [38,`38`],
            [39,`FIZZ`],
            [40,`BUZZ`],
            [41,`41`],
            [42,`FIZZTAZZ`],
            [43,`43`],
            [44,`44`],
            [45,`FIZZBUZZ`],
            [46,`46`],
            [47,`47`],
            [48,`FIZZ`],
            [49,`TAZZ`],
            [50,`BUZZ`],
            [51,`FIZZ`],
            [52,`52`],
            [53,`53`],
            [54,`FIZZ`],
            [55,`BUZZ`],
            [56,`TAZZ`],
            [57,`FIZZ`],
            [58,`58`],
            [59,`59`],
            [60,`FIZZBUZZ`],
            [61,`61`],
            [62,`62`],
            [63,`FIZZTAZZ`],
            [64,`64`],
            [65,`BUZZ`],
            [66,`FIZZ`],
            [67,`67`],
            [68,`68`],
            [69,`FIZZ`],
            [70,`BUZZTAZZ`],
            [71,`71`],
            [72,`FIZZ`],
            [73,`73`],
            [74,`74`],
            [75,`FIZZBUZZ`],
            [76,`76`],
            [77,`TAZZ`],
            [78,`FIZZ`],
            [79,`79`],
            [80,`BUZZ`],
            [81,`FIZZ`],
            [82,`82`],
            [83,`83`],
            [84,`FIZZTAZZ`],
            [85,`BUZZ`],
            [86,`86`],
            [87,`FIZZ`],
            [88,`88`],
            [89,`89`],
            [90,`FIZZBUZZ`],
            [91,`TAZZ`],
            [92,`92`],
            [93,`FIZZ`],
            [94,`94`],
            [95,`BUZZ`],
            [96,`FIZZ`],
            [97,`97`],
            [98,`TAZZ`],
            [99,`FIZZ`],
            [100,`BUZZ`],
            [101,`101`],
            [102,`FIZZ`],
            [103,`103`],
            [104,`104`],
            [105,`FIZZBUZZTAZZ`],
            [106,`106`]
        ])(
            "fizzBuzzTazz(%p) => %p",
            (index, expected) => {
                /*actual value is put in a string to accept both 1[Number] and "1"[String]*/
                expect(`${fizzBuzzer.fizzBuzzTazz(index)}`).toEqual(expected);
            });
    });
    describe('Fizz Fizz', () => {
        test.each([
            [1,`1`],
            [2,`2`],
            [3,`FIZZFIZZ`],
            [4,`4`],
            [5,`BUZZBUZZ`],
            [6,`FIZZ`],
            [7,`TAZZTAZZ`],
            [8,`8`],
            [9,`FIZZ`],
            [10,`BUZZ`],
            [11,`11`],
            [12,`FIZZ`],
            [13,`FIZZ`],
            [14,`TAZZ`],
            [15,`FIZZBUZZBUZZ`],
            [16,`16`],
            [17,`TAZZ`],
            [18,`FIZZ`],
            [19,`19`],
            [20,`BUZZ`],
            [21,`FIZZTAZZ`],
            [22,`22`],
            [23,`FIZZ`],
            [24,`FIZZ`],
            [25,`BUZZBUZZ`],
            [26,`26`],
            [27,`FIZZTAZZ`],
            [28,`TAZZ`],
            [29,`29`],
            [30,`FIZZFIZZBUZZ`],
            [31,`FIZZ`],
            [32,`FIZZ`],
            [33,`FIZZFIZZ`],
            [34,`FIZZ`],
            [35,`FIZZBUZZBUZZTAZZ`],
            [36,`FIZZFIZZ`],
            [37,`FIZZTAZZ`],
            [38,`FIZZ`],
            [39,`FIZZFIZZ`],
            [40,`BUZZ`],
            [41,`41`],
            [42,`FIZZTAZZ`],
            [43,`FIZZ`],
            [44,`44`],
            [45,`FIZZBUZZBUZZ`],
            [46,`46`],
            [47,`TAZZ`],
            [48,`FIZZ`],
            [49,`TAZZ`],
            [50,`BUZZBUZZ`],
            [51,`FIZZBUZZ`],
            [52,`BUZZ`],
            [53,`FIZZBUZZ`],
            [54,`FIZZBUZZ`],
            [55,`BUZZBUZZ`],
            [56,`BUZZTAZZ`],
            [57,`FIZZBUZZTAZZ`],
            [58,`BUZZ`],
            [59,`BUZZ`],
            [60,`FIZZBUZZ`],
            [61,`61`],
            [62,`62`],
            [63,`FIZZFIZZTAZZ`],
            [64,`64`],
            [65,`BUZZBUZZ`],
            [66,`FIZZ`],
            [67,`TAZZ`],
            [68,`68`],
            [69,`FIZZ`],
            [70,`BUZZTAZZTAZZ`],
            [71,`TAZZ`],
            [72,`FIZZTAZZ`],
            [73,`FIZZTAZZ`],
            [74,`TAZZ`],
            [75,`FIZZBUZZBUZZTAZZ`],
            [76,`TAZZ`],
            [77,`TAZZTAZZ`],
            [78,`FIZZTAZZ`],
            [79,`TAZZ`],
            [80,`BUZZ`],
            [81,`FIZZ`],
            [82,`82`],
            [83,`FIZZ`],
            [84,`FIZZTAZZ`],
            [85,`BUZZBUZZ`],
            [86,`86`],
            [87,`FIZZTAZZ`],
            [88,`88`],
            [89,`89`],
            [90,`FIZZBUZZ`],
            [91,`TAZZ`],
            [92,`92`],
            [93,`FIZZFIZZ`],
            [94,`94`],
            [95,`BUZZBUZZ`],
            [96,`FIZZ`],
            [97,`TAZZ`],
            [98,`TAZZ`],
            [99,`FIZZ`],
            [100,`BUZZ`],
            [101,`101`],
            [102,`FIZZ`],
            [103,`FIZZ`],
            [104,`104`],
            [105,`FIZZBUZZBUZZTAZZ`],
            [735,`FIZZFIZZBUZZBUZZTAZZTAZZ`]
        ])(
            "fizzFizz(%p) => %p",
            (index, expected) => {
                /*actual value is put in a string to accept both 1[Number] and "1"[String]*/
                expect(`${fizzBuzzer.fizzFizz(index)}`).toEqual(expected);
            });
    });
});
